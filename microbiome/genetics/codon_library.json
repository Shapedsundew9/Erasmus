[
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true
        },
        "meta_data": {
            "name": "less than",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{0[i0]} < {0[i1]}"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true
        },
        "meta_data": {
            "name": "less than equal too",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{0[i0]} <= {0[i1]}"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true
        },
        "meta_data": {
            "name": "equal too",
            "function": {
                "python3": {
                    "0": {
                        "inline": "isclose({0[i0]}, {0[i1]})"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true
        },
        "meta_data": {
            "name": "and",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{0[i0]} and {0[i1]}"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true
        },
        "meta_data": {
            "name": "or",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{0[i0]} or {0[i1]}"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true
        },
        "meta_data": {
            "name": "exclusive or",
            "function": {
                "python3": {
                    "0": {
                        "inline": "bool({0[i0]}) != bool({0[i1]})"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0]],
            "O": [["A", 0]]
        },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true
        },
        "meta_data": {
            "name": "not",
            "function": {
                "python3": {
                    "0": {
                        "inline": "not {0[i0]}"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1], ["I", 2]],
            "O": [["A", 0]]
         },
        "gca": "0000000000000000000000000000000000000000000000000000000000000000",
        "gcb": "0000000000000000000000000000000000000000000000000000000000000000",
        "generation": 0,
        "alpha_class": 0,
        "beta_class": 0,
        "opt_num_codons": 1,
        "properties": {
            "logical": true,
            "conditional": true
        },
        "meta_data": {
            "name": "if-then-else",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{0[i0]} if {0[i1]} else {0[i2]}" 
                    }
                }
            }
        }
    } 
]