[
   {
       "graph": {
           "A": [["I", 0], ["I", 1]],
           "O": [["A", 0]]
       },
       "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
       "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
       "classification": {
            "codon": true,
            "mathematical": true
       },
       "meta_data": {
           "name": "add",
           "function": {
               "python3": {
                   "0": {
                       "inline": "{} = {} + {}",
                       "callable": "{}(x, y)\n\treturn x + y"
                   }
               }
           }
       }
   },
   {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "mathematical": true
        },
        "meta_data": {
            "name": "subtract",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} - {}",
                        "callable": "{}(x, y)\n\treturn x - y"
                    }
                }
            }
        }
    },
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "mathematical": true
        },
        "meta_data": {
            "name": "multiply",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} * {}",
                        "callable": "{}(x, y)\n\treturn x * y"
                    }
                }
            }
        }
    },
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "mathematical": true
        },
        "meta_data": {
            "name": "divide",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} / {}",
                        "callable": "{}(x, y)\n\treturn x / y"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "mathematical": true
        },
        "meta_data": {
            "name": "power",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} ** {}",
                        "callable": "{}(x)\n\treturn x ** y"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true
        },
        "meta_data": {
            "name": "less than",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} < {}",
                        "callable": "{}(x)\n\treturn x < y"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true
        },
        "meta_data": {
            "name": "less than equal too",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} <= {}",
                        "callable": "{}(x)\n\treturn x <= y"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true
        },
        "meta_data": {
            "name": "equal too",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = isclose({}, {})",
                        "callable": "{}(x)\n\treturn isclose(x, y)"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true
        },
        "meta_data": {
            "name": "and",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} and {}",
                        "callable": "{}(x)\n\treturn x and y"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true
        },
        "meta_data": {
            "name": "or",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} or {}",
                        "callable": "{}(x)\n\treturn x or y"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true
        },
        "meta_data": {
            "name": "exclusive or",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = bool({}) != bool({})",
                        "callable": "{}(x)\n\treturn bool(x) != bool(y)"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0]],
            "O": [["A", 0]]
        },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true
        },
        "meta_data": {
            "name": "not",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = not {}",
                        "callable": "{}(x)\n\treturn not x"
                    }
                }
            }
        }
    }, 
    {
        "graph": {
            "A": [["I", 0], ["I", 1], ["I", 2]],
            "O": [["A", 0]]
         },
        "GCA": "0000000000000000000000000000000000000000000000000000000000000000",
        "GCB": "0000000000000000000000000000000000000000000000000000000000000000",
        "classification": {
            "codon": true,
            "logical": true,
            "flow": true
        },
        "meta_data": {
            "name": "if-then-else",
            "function": {
                "python3": {
                    "0": {
                        "inline": "{} = {} if {} else {}",
                        "callable": "{}(x)\n\treturn x if y else z"
                    }
                }
            }
        }
    } 
]