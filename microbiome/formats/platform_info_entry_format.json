{
    "machine": {
        "type": "string",
        "maxlength": 128,
        "required": true,
        "meta": {
            "database": {
                "type": "VARCHAR"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "compressed": false,
            "coerce": "string_128",
            "description": "The machine type, e.g. 'i386'. An empty string if the value cannot be determined."
        }
    },
    "signature": {
        "meta": {
            "database": {
                "type": "BYTEA",
                "properties": "PRIMARY KEY"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "sha256": true,
            "description": "Unique identifier for this platform."
        },
        "type": "string",
        "minlength": 64,
        "maxlength": 64,
        "regex": "[0-9a-f]{64}",
        "default_setter": "set_signature"
    },        
    "processor": {
        "type": "string",
        "maxlength": 128,
        "required": true,
        "meta": {
            "database": {
                "type": "VARCHAR"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "compressed": false,
            "coerce": "string_128",
            "description": "The (real) processor name, e.g. 'amdk6'. An empty string if the value cannot be determined."
        }
    },
    "platform": {
        "type": "string",
        "maxlength": 1024,
        "required": true,
        "meta": {
            "database": {
                "type": "VARCHAR"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "compressed": false,
            "coerce": "string_1024",
            "description": "Returns a single string identifying the underlying platform with as much useful information as possible. The output is intended to be human readable rather than machine parseable. "
        }
    },
    "python_version": {
        "type": "string",
        "maxlength": 64,
        "required": true,
        "meta": {
            "database": {
                "type": "VARCHAR"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "compressed": false,
            "coerce": "string_64",
            "description": "The Python version as string 'major.minor.patchlevel'."
        }
    },
    "system": {
        "type": "string",
        "maxlength": 64,
        "required": true,
        "meta": {
            "database": {
                "type": "VARCHAR"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "compressed": false,
            "coerce": "string_64",
            "description": "The system/OS name, such as 'Linux', 'Darwin', 'Java', 'Windows'. An empty string if the value cannot be determined."
        }
    },
    "release": {
        "type": "string",
        "maxlength": 64,
        "required": true,
        "meta": {
            "database": {
                "type": "VARCHAR"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "compressed": false,
            "coerce": "string_64",
            "description": "The systemâ€™s release, e.g. '2.2.0' or 'NT'. An empty string if the value cannot be determined."
        }
    },
    "EGPOps/s": {
        "type": "float",
        "min": 0.0,
        "required": true,
        "meta": {
            "database": {
                "type": "DOUBLE PRECISION"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "compressed": false,
            "description": "An Erasmus GP specific performance metric directly proportional to the prcoessing power of the system for typical Erasmus GP tasks in units of notional operations per second. Bigger = faster."
        }
    },
    "created": {
        "meta": {
            "database": {
                "type": "TIMESTAMP"
            },
            "definition": {
                "location": ["WORKER"],
                "immutable": true
            },
            "description": "The date and time of the first use of this platform."
        },
        "type": "string",
        "minlength": 27,
        "maxlength": 27,
        "regex": "20[2-9][0-9]-(1[0-2]|0[1-9])-([0-2][0-9]|3[01])T[0-2][0-9](:[0-5][0-9]){2}\\.[0-9]{6}Z",
        "check_with": "valid_created",
        "default_setter": "set_created"
    }
}